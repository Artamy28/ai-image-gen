import React, { useState, useEffect } from "react";
import {
	FormField,
	Loading,
	RenderCardGallery,
} from "../components/exportComponents";

const Home = () => {
	const [loading, setLoading] = useState(false);
	const [allPosts, setAllPosts] = useState(null);
	const [searchText, setSearchText] = useState("");
	const [searchedResults, setSearchedResults] = useState(null);
	const [searchTimeout, setSearchTimeout] = useState(null);

	useEffect(() => {
		useEffect(() => {
			const ping = async () => {
				fetch("https://ai-image-gen-0xbq.onrender.com").then(
					console.log("Server pinged.")
				);
			};
			ping();
		}, []);

		const fetchposts = async () => {
			setLoading(true);
			try {
				const response = await fetch(
					"https://ai-image-gen-0xbq.onrender.com/api/post",
					{
						method: "GET",
						headers: {
							"Content-Type": "application/json",
						},
					}
				);

				if (response.ok) {
					const result = await response.json();
					setAllPosts(result.data.reverse());
				}
			} catch (error) {
				alert(error);
			} finally {
				setLoading(false);
			}
		};

		fetchposts();
	}, []);

	const handleSearchChange = (e) => {
		setSearchText(e.target.value);

		const searchResults = allPosts.filter((item) => {
			return (
				item.name.toLowerCase().includes(searchText.toLowerCase()) ||
				item.prompt.toLowerCase().includes(searchText.toLowerCase())
			);
		});

		setSearchedResults(searchResults);
	};

	return (
		<section className="max-w-7xl mx-auto">
			<div>
				<h1 className="font-extrabold text-3xl text-[#16191f]">
					Community Showcase
				</h1>
				<p className="mt-2 text-base text-[#42505c]">
					Browse through a collection of stunning images generated by DALL-E
				</p>
			</div>

			<div className="mt-14">
				<FormField
					labelName="Search posts"
					type="text"
					name="text"
					placeholder="Search posts"
					value={searchText}
					handleChange={handleSearchChange}
				/>
			</div>

			<div className="mt-10">
				{loading ? (
					<div className="flex justify-center items-center">
						<Loading />
					</div>
				) : (
					<>
						{searchText && (
							<h2 className="font-medium text-[#42505c] text-xl mb-3">
								Showing results for <span>{searchText}</span>
							</h2>
						)}
						<div className="grid grid-cols-1 xs:grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-3">
							{searchText ? (
								// If there is user input in search bar, render relevant posts
								// Default title is "No results found" if there are no relevant posts
								<RenderCardGallery
									data={searchedResults}
									title="No search results found..."
								/>
							) : (
								// If search bar is empty, render all posts
								// Default title is "No posts founds" if there really are no posts
								<RenderCardGallery data={allPosts} title="No posts found" />
							)}
						</div>
					</>
				)}
			</div>
		</section>
	);
};

export default Home;
